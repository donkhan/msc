<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0061)https://condor.depaul.edu/glancast/444class/docs/nfa2dfa.html -->
<html lang="en" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title></title>
<style type="text/css" id="internalStyle">
<!--
.cpp1-assembler { color: rgb(0,0,255); }
.cpp1-character { color: rgb(0,0,0); }
.cpp1-comment { color: rgb(128,0,0); font-style: italic; }
.cpp1-float { color: rgb(128,0,128); }
.cpp1-hexadecimal { color: rgb(128,0,128); }
.cpp1-identifier { color: rgb(0,0,200); font-weight: bold; }
.cpp1-illegalchar { color: rgb(0,0,0); }
.cpp1-number { color: rgb(128,0,128); }
.cpp1-octal { color: rgb(128,0,128); }
.cpp1-preprocessor { color: rgb(128,0,128); }
.cpp1-reservedword { color: rgb(0,128,0); font-weight: bold; }
.cpp1-space { background-color: rgb(255,255,255); color: rgb(0,0,0); }
.cpp1-string { color: rgb(128,0,0); }
.cpp1-symbol { color: rgb(0,0,0); }

.indent {
        margin: 12pt;
}
.pgindent {
        margin-top: 12pt;
        margin-left:12pt;
        margin-right:12pt;
        margin-bottom: 120pt;
}
pre { font-weight: bold; color: rgb(20,20,230); }

body.lecture  {
	margin: 12pt;
        margin-right: 24pt;
}
.lecture pre {
	font-weight: bold;
	color: black;
	background: rgb(230,235,235);
	border-style: solid;
	border-width: 1pt;
	border-color: blue;
	padding: 2pt;
}
.lecture pre.java tt {
	color: green;
}
.lecture pre.java b {
	color: blue;
}
.lecture pre.java strong {
	color: red;
}
.sfoot {
	font-size: smaller;
	font-style: italic;
	color: rgb(20,20,230);
} 
.foot {
	font-size: smaller;
	font-style: italic;
	margin-bottom: 64pt;
}
.lecture h2 {
	border-width: thin;
	border-top-style: solid;
	padding-top: 5pt;
        font-size: medium;
}
.lecture .sfoot {
	border-width: 2pt;
	border-top-style: double;
	padding-top: 5pt;
	margin-bottom: 0pt;
}

.lecture .foot {
	border-width: thin;
	border-top-style: solid;
	padding-top: 5pt;
}

ol li {
       list-style-type: decimal;
}
ol li li {
       list-style-type: lower-alpha;
}
ol li li li {
       list-style-type: lower-roman;
}

pre.answer {
        background: white;
}
.answer {
        border-style: solid;
        border-width: 1pt;
        border-color: blue;
        font-weight: bold;
        padding: 3pt;
        width: 90%;
}
.answer label {
        border-bottom-style: solid;
        border-width: thin;
        background: rgb(230,230,230);
        width: 100%;
}
.answer b {
        color: blue;
}
.answer tt {
        color: green;
}
.answer strong {
        color: red;
}
.answer var {
        text-decoration: line-through;
}
.answer em {
        color: rgb(170,40,20);
}
.no_ul {
	text-decoration: none;
	font-weight: normal;
	font-size: smaller;
}
.no_ul:link {
	color: rgb(100, 176,176);
	color: rgb(255,255,255);
	font-weight: bold;
	font-weight: normal;
}
.no_ul:active {
	color: green;
}	
.no_ul:visited {
	color: rgb(100,176,176);
	color: rgb(255,255,255);
}
.no_ul:hover {
	color: red;
}

pre.plain {
background: white;
border-style: none;
}
body {
font-family: Verdana;
}
table {
border-style: none;
border-size: thin;
border-color: white;
margin-bottom: 15pt;
}
td { 
border-style: solid;
border-size: thin;
text-align: center;
}
td.col1 {
border-style: none;
brder-size: 0ex;
text-align: center;
}
-->
</style>
</head>
<body class="lecture">
    <h3>Converting an NFA to a DFA - Example</h3>
    <hr>
    <p>Consider the following NFA</p>
    <p><img src="./nfa2dfa_files/nfa2dfa.gif" alt="A non-deterministic finite
    automaton"></p>
    <pre class="plain">  Q = states = {1,2,3,4,5}
  Start state: { 1 }
  Accepting state(s): { 5 }
</pre>
    <p>Now construct an equivalent DFA.</p>

    <ul>
      <li>The states of the DFA will be determined by subsets of the
      states of the NFA.</li>
      <li> Unfortunately, there are 2<sup>5</sup> = 32
      different subsets of Q. Here are some of them:
<pre class="answer"> Q<sup>/</sup> = states for the DFA
 Some states in Q<sup>/</sup>:
 Empty set, {1}, {2}, {3}, {4}, {5}, {1,2}, {1,3}, ..., {1,2,3,4,5}
</pre></li>
      <li>But not all will be <em>reachable</em> from
      the start state of the DFA to be constructed.</li> 
      <li>The start state is the ε-closure of the start state
 of the NFA.</li>
      <li>The final states of the DFA will correspond to the subsets of the
 NFA that <em><b>contain</b></em> a final state.</li>
    </ul>
    <p>The ε-closure of a set of states, R,  of the NFA will
    be denoted by E(R).</p>
    <pre class="answer">
 E(R) = R ∪ { q | there is an r in R with an ε transition to q }

 In the example, E({1}) = {1} ∪ { 2 } = {1,2}

</pre>
    <h3>Construction</h3>
    <ol>
      <li>Compute the start state: E({1}) = {1,2}</li>
      <li>Start a table for the transition function or draw a diagram
      with {1,2} but only containing the start state:

<p><img src="./nfa2dfa_files/dfa1.gif" alt="First Step nfa to dfa"></p>

    <table border="1" style="border-collapse: collapse;">
      <tbody><tr>
	<!-- one of (td th) -->
	<th>&nbsp;</th>
	<th>a</th>
	<th>b</th>
      </tr>
      <!-- one of (tbody tr) -->
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{1,2}</td>
	<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
	<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>

    </tbody></table>

</li>
      <li>Compute the transition function for the DFA from the start
      state.<ol>
	  <li>For one of the inputs, say 'a', consider all possible
      states that can be reached in the NFA from any one of the states in
      {1,2} on input 'a'. These are states that are reachable along
      paths labeled 'a', also allowing any edges labeled
      ε. 
<p>For example,</p>
<pre class="plain">

 DFA state {1,2}
 From 1, we have
          a path from 1 to 3 labeled 'a': 1 a 3
          a path from 1 to 4 labeled ε 'a': 1 ε 2 'a' 4
          a path from 1 to 5 labeled ε 'a': 1 ε 3 'a' 5
 From 2, we have
          a path from 2 to 4 labeled 'a': 2 'a' 4
          a path from 2 to 5 labeled 'a': 3 'a' 5

So altogether we can reach {3,4,5} from {1,2} on input 'a'
</pre>

    <table border="1" style="border-collapse: collapse;">
      <tbody><tr>
	<!-- one of (td th) -->
	<th>&nbsp;</th>
	<th>a</th>
	<th>b</th>
      </tr>
      <!-- one of (tbody tr) -->
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{1,2}</td>
	<td>{3,4,5}</td>
	<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>

    </tbody></table>


</li>
	  <li>Next compute the transitions from the start
	  state with input 'b'. But when the NFA transitions are examined there
	  are no paths from either state in {1,2} with label 'b'. So
	  the subset of states that can be reached is the empty set,
	  ∅.

    <table border="1" style="border-collapse: collapse; margin-bottom: 15pt;">
      <tbody><tr>
	<!-- one of (td th) -->
	<th>&nbsp;</th>
	<th>a</th>
	<th>b</th>
      </tr>
      <!-- one of (tbody tr) -->
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{1,2}</td>
	<td>{3,4,5}</td>
	<td>&nbsp;&nbsp;&nbsp;∅&nbsp;&nbsp;&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>

    </tbody></table>
</li>
	</ol>
</li>
      <li>If a new state is reached when the transitions on 'a' and
      'b' are computed, the process has to be repeated this new state.
      For example, {3,4,5} is a new state for the DFA and so we must
      compute transitions from this state. 
<pre class="plain">
 DFA state {3,4,5}, input 'a'
 From 3, we have no transition paths labeled 'a'
 From 4, 
          a path from 4 to 5 labeled 'a': 4 a 5
 From 5, there are no transition paths labeled 'a'

 So altogether we can reach {5} from {3,4,5} on input 'a'

 DFA state {3,4,5}, input 'b'
 From state 3, a path from 3 to 4 labeled 'b': 3 b 4
 From state 4, a path from 4 to 5 labeled 'b': 4 b 5
 From 5, there are no transition paths labeled 'b'

 So altogether we can reach {4,5} from {3,4,5} on input 'b'
</pre>
<p>Filling in the table we get:</p>
    <table border="1" style="border-collapse: collapse;">
      <tbody><tr>
	<!-- one of (td th) -->
	<th>&nbsp;</th>
	<th>a</th>
	<th>b</th>
      </tr>
      <!-- one of (tbody tr) -->
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{1,2}</td>
	<td>{3,4,5}</td>
	<td>&nbsp;&nbsp;&nbsp;∅&nbsp;&nbsp;&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{3,4,5}&nbsp;</td>
	<td>{5}&nbsp;</td>
	<td>{4,5}&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">&nbsp;</td>
	<td>&nbsp;</td>
	<td>&nbsp;</td>
      </tr>

    </tbody></table>
</li>
      <li>Continuing filling in the table as long as any states are
      entered that do not yet have a row. For example neither {5} or
      {4,5} have a row yet. So pick one and compute its transitions.
<p>The final states of the DFA are the sets that <em><b>contain</b></em> 5 since that is
      the only final state of the NFA.</p>
<p>The final table and corresponding DFA state diagram are:</p>


    <table border="1" style="border-collapse: collapse; float:left;">
      <tbody><tr>
	<!-- one of (td th) -->
	<th>&nbsp;</th>
	<th>a</th>
	<th>b</th>
      </tr>
      <!-- one of (tbody tr) -->
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{1,2}</td>
	<td>{3,4,5}</td>
	<td>∅</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{3,4,5}</td>
	<td>{5}</td>
	<td>{4,5}</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{5}</td>
	<td>∅</td>
	<td>∅</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">{4,5}</td>
	<td>{5}</td>
	<td>{5}</td>
      </tr>
      <tr>
	<!-- one of (td th) -->
	<td class="col1">∅</td>
	<td>∅</td>
	<td>∅</td>
      </tr>

    </tbody></table>
    <p><img src="./nfa2dfa_files/dfa2.gif" alt="converted DFA and transitions" style="margin-left: 10pc;"></p>
</li>
 
    </ol>



</body></html>