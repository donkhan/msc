P1:
library(splines)

P2:
c(3,1,3,1) ** c(2,3,1,2)
	= 9 1 3 1

P3:
(c(3,2,3,2) ** c(2,3,1,3)) ^ c(2,1,2,3) * c(2,3,3,2)
	= 162 24 27 1024

P4:
max(c(5,2,3,4)) ** min(c(-5,-2,-3,-4))
	= .00032

P5:
(min(c(4,3,2,1)) - max(c(-1,-2,-3,-4))) * c(-1,-2,3,4)
	= -2 -4 6 8

P6:
(sqrt(c(4,9,16,36)) + abs(c(-6,-4,4,6))) ** 2
	= 64  49  64 144

P7:
sqrt(c(36,16,9,4)) - abs(c(-6,-4,3,2))/ sqrt(c(36,9,16,4)) - abs(c(2,3,-4,-6))* sqrt(c(9,16,4,36)) + abs(c(-6,-4,3,2))
5.000000  -5.333333  -2.750000 -33.000000

P8:
x = matrix(nrow=2, ncol=2, data=c(-3,-4,-5,-6))
t(x)
=  [,1] [,2]
[1,]   -3   -4
[2,]   -5   -6

P9:
x = matrix(nrow=3, ncol=3, data=c(1,8,8,10,12,4,12,18,16), byrow=TRUE)
t(x)-3*t(x)+2*t(x)%%t(x)
= [,1] [,2] [,3]
[1,]   -2  -20  -24
[2,]  -16  -24  -36
[3,]  -16   -8  -32

P10:
x = matrix(nrow=3, ncol=3, data=1:9, byrow=T)
x[1:2, 2:3] and x[3,]

= x[1:2, 2:3] 
     [,1] [,2]
[1,]    2    3
[2,]    5    6
> x[3,]
[1] 7 8 9

P11:
x=matrix(nrow = 4, ncol = 4, data = 2*c(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))
 = x%*%x-x=x

P12:
x = matrix(nrow=2, ncol=4, data=c(11,12,13,14,15,16,17,18))
= -24

P13:
c(2,4,3,5)^c(3,2,1)
[1]   8  16   3 125
Warning message:
In c(2, 4, 3, 5)^c(3, 2, 1) :
  longer object length is not a multiple of shorter object length

P14:
c(3,4,5,6,7,8)**c(1,2,3) - (c(1,2,3,4,5,6)^c(2,3,1))**2
= 2    -48    116   -250 -15576    476

P15:
(c(5,4,3,2,1) * 8/2)**2
= 400 256 144  64  16
